name: snowflake-iac
on:
  pull_request: { branches: [ main ] }
  push:         { branches: [ main ] }

env:
  AWS_REGION: ap-northeast-1
  AWS_ROLE_ARN: arn:aws:iam::321688112405:role/github-oidc-terraform

jobs:
  plan:
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.8
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Write private key (PEM) to /tmp
        shell: sh
        run: |
          printf '%s' "${{ secrets.PRIVATE_KEY_B64 }}" | base64 -d > /tmp/sf_key.pem
          chmod 600 /tmp/sf_key.pem

      - name: Terraform init (reconfigure & upgrade)
        run: terraform init -input=false -reconfigure -upgrade

      - name: Show provider resolution
        run: |
          terraform version
          terraform providers
          echo "---- lock file (head) ----"
          sed -n '1,120p' .terraform.lock.hcl || true

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        env:
          TF_VAR_account:                ${{ secrets.SF_ACCOUNT }}        # 例: RJ12293
          TF_VAR_region:                 ap-northeast-1
          TF_VAR_user:                   ${{ secrets.SF_USER }}           # 例: TF_ADMIN
          TF_VAR_role:                   SECURITYADMIN
          TF_VAR_private_key_passphrase: ${{ secrets.SF_KEY_PASSPHRASE }} # ある場合のみ
        run: terraform plan -no-color -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with: { name: tfplan, path: tfplan }

  apply:
    needs: plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.8
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { name: tfplan, path: . }

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Write private key (PEM) to /tmp
        shell: sh
        run: |
          printf '%s' "${{ secrets.PRIVATE_KEY_B64 }}" | base64 -d > /tmp/sf_key.pem
          chmod 600 /tmp/sf_key.pem

      - name: Terraform init (reconfigure)
        run: terraform init -input=false -reconfigure

      - name: Terraform apply
        env:
          TF_VAR_account:                ${{ secrets.SF_ACCOUNT }}
          TF_VAR_region:                 ap-northeast-1
          TF_VAR_user:                   ${{ secrets.SF_USER }}
          TF_VAR_role:                   SECURITYADMIN
          TF_VAR_private_key_passphrase: ${{ secrets.SF_KEY_PASSPHRASE }}
        run: terraform apply -auto-approve tfplan

