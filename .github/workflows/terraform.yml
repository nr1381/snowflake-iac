name: snowflake-iac
on:
  pull_request: { branches: [ main ] }
  push:         { branches: [ main ] }

env:
  AWS_REGION: ap-northeast-1
  AWS_ROLE_ARN: arn:aws:iam::321688112405:role/github-oidc-terraform

jobs:
  plan:
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.8
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # Snowflake 環境変数を設定（bash ではなく sh を使用）
      - name: Export Snowflake envs
        shell: sh
        run: |
          # 秘密鍵を復元
          printf '%s' "${{ secrets.PRIVATE_KEY_B64 }}" | base64 -d > /tmp/sf_key.pem
          chmod 600 /tmp/sf_key.pem
          sed -i 's/\r$//' /tmp/sf_key.pem 2>/dev/null || true

          # Secrets → SNOWFLAKE_* へ。SF_ACCOUNT はロケータのみ（例: RJ12293）
          echo "SNOWFLAKE_ACCOUNT=${{ secrets.SF_ACCOUNT }}" >> "$GITHUB_ENV"
          echo "SNOWFLAKE_REGION=ap-northeast-1"             >> "$GITHUB_ENV"
          echo "SNOWFLAKE_USER=${{ secrets.SF_USER }}"       >> "$GITHUB_ENV"
          echo "SNOWFLAKE_ROLE=SECURITYADMIN"                >> "$GITHUB_ENV"
          echo "SNOWFLAKE_AUTHENTICATOR=SNOWFLAKE_JWT"       >> "$GITHUB_ENV"
          echo "SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=${{ secrets.SF_KEY_PASSPHRASE }}" >> "$GITHUB_ENV"

          # 複数行の秘密鍵（EOF をクォートしない）
          {
            echo "SNOWFLAKE_PRIVATE_KEY<<EOF"
            cat /tmp/sf_key.pem
            echo "EOF"
          } >> "$GITHUB_ENV"

      # デバッグ（値が渡っているか確認・問題解決後は削除OK）
      - name: Debug env (temporary)
        run: |
          env | grep '^SNOWFLAKE_' | sed 's/=.*/=<masked>/' || true
          echo "len(SNOWFLAKE_ACCOUNT)=$(printf %s "$SNOWFLAKE_ACCOUNT" | wc -c)"

      - name: Terraform init (reconfigure & upgrade)
        run: terraform init -input=false -reconfigure -upgrade

      - name: Show provider resolution
        run: |
          terraform version
          terraform providers
          echo "---- lock file (head) ----"
          sed -n '1,120p' .terraform.lock.hcl || true

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -no-color -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with: { name: tfplan, path: tfplan }

  apply:
    needs: plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.8
    permissions: { id-token: write, contents: read }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: { name: tfplan, path: . }

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Export Snowflake envs
        shell: sh
        run: |
          printf '%s' "${{ secrets.PRIVATE_KEY_B64 }}" | base64 -d > /tmp/sf_key.pem
          chmod 600 /tmp/sf_key.pem
          sed -i 's/\r$//' /tmp/sf_key.pem 2>/dev/null || true
          echo "SNOWFLAKE_ACCOUNT=${{ secrets.SF_ACCOUNT }}" >> "$GITHUB_ENV"
          echo "SNOWFLAKE_REGION=ap-northeast-1"             >> "$GITHUB_ENV"
          echo "SNOWFLAKE_USER=${{ secrets.SF_USER }}"       >> "$GITHUB_ENV"
          echo "SNOWFLAKE_ROLE=SECURITYADMIN"                >> "$GITHUB_ENV"
          echo "SNOWFLAKE_AUTHENTICATOR=SNOWFLAKE_JWT"       >> "$GITHUB_ENV"
          echo "SNOWFLAKE_PRIVATE_KEY_PASSPHRASE=${{ secrets.SF_KEY_PASSPHRASE }}" >> "$GITHUB_ENV"
          {
            echo "SNOWFLAKE_PRIVATE_KEY<<EOF"
            cat /tmp/sf_key.pem
            echo "EOF"
          } >> "$GITHUB_ENV"

      - name: Debug env (temporary)
        run: |
          env | grep '^SNOWFLAKE_' | sed 's/=.*/=<masked>/' || true
          echo "len(SNOWFLAKE_ACCOUNT)=$(printf %s "$SNOWFLAKE_ACCOUNT" | wc -c)"

      - name: Terraform init (reconfigure)
        run: terraform init -input=false -reconfigure

      - name: Terraform apply
        run: terraform apply -auto-approve tfplan

